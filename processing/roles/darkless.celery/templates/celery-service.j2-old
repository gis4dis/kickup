# {{  ansible_managed }}
# Do not change!
[Unit]
Description={{ _uwsgi_app.name }} Celery worker
After=network.target

[Service]
EnvironmentFile=-{{ _uwsgi_app.app_root }}/{{ _uwsgi_app.name }}-celery.env
WorkingDirectory={{ _uwsgi_app.src_root }}

ExecStart=/bin/sh -c '${CELERY_BIN} multi start ${CELERYD_NODES} -A rdb_dl.celery \
    --pidfile=${CELERYD_PIDFILE} --logfile=${CELERYD_LOGFILE} --loglevel=${CELERYD_LOGLEVEL} ${CELERYD_OPTS}'

ExecStart={{ _uwsgi_virtualenv }}/bin/celery -A poster worker -l info -n frontend-worker1@%h


ExecStop=/bin/sh -c '${CELERY_BIN} multi stopwait ${CELERYD_NODES} --pidfile=${CELERYD_PIDFILE}'

ExecReload=/bin/sh -c '${CELERY_BIN} multi restart ${CELERYD_NODES} -A rdb_dl.celery \
    --pidfile=${CELERYD_PIDFILE} --logfile=${CELERYD_LOGFILE} --loglevel=${CELERYD_LOGLEVEL} ${CELERYD_OPTS}'



ExecStop={{ _uwsgi_virtualenv }}/bin/celery multi stopwait 3

ExecReload={{ _uwsgi_virtualenv }}/bin/celery multi restart 3

#ExecStart={{ _uwsgi_app.app_root }}celery.sh
#ExecStart={{ _uwsgi_app.app_root }}/virtualenv/bin/celery worker -A poster -l info -n frontend-worker1@%h

User={{ _uwsgi_app.user }}
Group={{ _uwsgi_app.user }}
Restart=always
KillSignal=SIGQUIT
Type=forking
#Type=notify
StandardError=syslog
NotifyAccess=all

[Install]
WantedBy=multi-user.target
